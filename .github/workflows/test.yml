name: Test

on:
  push:
    branches-ignore:
      - development
      - production
env:
  CARGO_TERM_COLOR: always

jobs:
  check_saint_lambda_files:
    name: Check Saint Lambda source code
    outputs:
      run_job: ${{ steps.check_saint_lambda_files.outputs.run_job }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - name: Check modified AWS Saint Lambda Source Code
        id: check_saint_lambda_files
        working-directory: saint-lambda
        run: |
          echo "=============== list modified files ==============="
          git diff --name-only HEAD^ HEAD

          echo "========== check paths of modified files =========="
          git diff --name-only HEAD^ HEAD > files.txt
          while IFS= read -r file
          do
            echo $file
            if [[ $file == saint-lambda/terraform/* || $file == .github/*  ]]; then
              echo "This modified file is not Saint Lambda source code"
              echo "::set-output name=run_job::false"
              break
            else
              echo "::set-output name=run_job::true"
            fi
          done < files.txt

  codestyle:
    runs-on: ubuntu-latest
    needs: [ check_saint_lambda_files ]
    if: needs.check_saint_lambda_files.outputs.run_job == 'true'
    steps:
      - name: Set up Rust
        uses: hecrj/setup-rust-action@v1
        with:
          components: rustfmt
      - uses: actions/checkout@v2
      - 
        working-directory: saint-lambda
        run: cargo fmt --all -- --check

  lint:
    runs-on: ubuntu-latest
    needs: [ check_saint_lambda_files ]
    if: needs.check_saint_lambda_files.outputs.run_job == 'true'
    steps:
      - name: Set up Rust
        uses: hecrj/setup-rust-action@v1
        with:
          components: clippy
      - uses: actions/checkout@v2
      - 
        working-directory: saint-lambda
        run: cargo clippy --all-targets -- -D clippy::all

  compile:
    runs-on: ubuntu-latest
    needs: [ check_saint_lambda_files ]
    if: needs.check_saint_lambda_files.outputs.run_job == 'true'
    steps:
      - name: Set up Rust
        uses: hecrj/setup-rust-action@v1
      - uses: actions/checkout@v2
      - 
        working-directory: saint-lambda
        run: cargo check --all
  test:
    needs: [codestyle, lint, compile]
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:11
        env:
          POSTGRES_DB: dev_hocvien        
          POSTGRES_PASSWORD: 123456
          POSTGRES_USER: hocvien_dev
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
    - name: Setup Rust
      uses: hecrj/setup-rust-action@v1
    - name: Checkout
      uses: actions/checkout@v2
      with:
        path: ./rust-service
    - name: Checkout shared-db-service
      uses: actions/checkout@v2
      with:
        # Repository name with owner. For example, actions/checkout
        # Default: ${{ github.repository }}
        repository: 'HocVienCongGiao/shared-db-service'
        path: ./db-service
        ref: development
        token: ${{ secrets.GH_OAUTH_TOKEN }} 
    - name: Test saint-lambda
      working-directory: ./rust-service/saint-lambda
      run: cargo test


